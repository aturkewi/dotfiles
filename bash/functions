# Functions
# =====================

# A function to extract correctly any archive based on extension
# USE: extract imazip.zip
#      extract imatar.tar
function extract () {
    if [ -f $1 ] ; then
        case $1 in
            *.tar.bz2)  tar xjf $1      ;;
            *.tar.gz)   tar xzf $1      ;;
            *.bz2)      bunzip2 $1      ;;
            *.rar)      rar x $1        ;;
            *.gz)       gunzip $1       ;;
            *.tar)      tar xf $1       ;;
            *.tbz2)     tar xjf $1      ;;
            *.tgz)      tar xzf $1      ;;
            *.zip)      unzip $1        ;;
            *.Z)        uncompress $1   ;;
            *)          echo "'$1' cannot be extracted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

# A function to easily grep for a matching process
# USE: psg postgres
function psg {
  FIRST=`echo $1 | sed -e 's/^\(.\).*/\1/'`
  REST=`echo $1 | sed -e 's/^.\(.*\)/\1/'`
  ps aux | grep "[$FIRST]$REST"
}

function check-port {
  port=$1;
  lsof -i tcp:$1;
}

function atom-sym {
  rm /usr/local/bin/atom
  ln -s /Applications/Atom.app/Contents/Resources/app/atom.sh /usr/local/bin/atom
  apm disable learn-ide
  apm disable learn-ide-tree
  apm disable learn-ide-notifications
  apm enable tree-view
}

function atom-ide {
  rm /usr/local/bin/atom
  ln -s /Applications/Atom.app/Contents/Resources/app/atom.sh /usr/local/bin/atom
  apm disable tree-view
  apm enable learn-ide
  apm enable learn-ide-tree
  apm enable learn-ide-notifications
}

function atom-vim-on {
  apm enable vim-mode-plus
}

function atom-vim-off {
  apm disable vim-mode-plus
}

function grad {
  /usr/bin/open -a "/Applications/Google Chrome.app" "https://learn.co/graduation/student-dashboard/$1"
}

function imp {
  /usr/bin/open -a "/Applications/Google Chrome.app" "https://learn.co/admin/impersonations/users/$1"
}

function ngrok {
  ~/ngrok $1 $2
}
