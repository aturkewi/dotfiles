# Environment
# =====================

# GIT_MERGE_AUTO_EDIT
# This variable configures git to not require a message when you merge.
export GIT_MERGE_AUTOEDIT='no'

export GPG_TTY=$(tty)

# Need for git autocomplete
# If not installed, install with `brew install git bash-completion`
# Source: https://github.com/bobthecow/git-flow-completion/wiki/Install-Bash-git-completion
[[ -r "/usr/local/etc/profile.d/bash_completion.sh" ]] && . "/usr/local/etc/profile.d/bash_completion.sh"

# Editors
# Tells your shell that when a program requires various editors, use sublime.
# The -w flag tells your shell to wait until sublime exits
export VISUAL="atom -w"
export SVN_EDITOR="atom -w"
export GIT_EDITOR="atom -w"
export EDITOR="atom -w"

export USR_PATHS="/usr/local:/usr/local/bin:/usr/local/sbin:/usr/bin"

export PATH="$USR_PATHS:$PATH"

# Postgres
export PATH=$PATH:/Applications/Postgres.app/Contents/Versions/9.4/bin

# SQlite
export PATH="/usr/local/opt/sqlite/bin:$PATH"

# OpenSSL
export PATH="/usr/local/opt/openssl/bin:$PATH"

# Mongo
export MONGO_PATH=/usr/local/mongodb
export PATH=$PATH:$MONGO_PATH/bin

# Elixir
export ERL_AFLAGS="-kernel shell_history enabled"

eval "$(direnv hook bash)"

# Install Python version manager
# export PYENV_ROOT="$HOME/.pyenv"
# export PATH="$PYENV_ROOT/bin:$PATH"
# eval "$(pyenv init -)"

# NVM - Node Version Manager
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

# ASDF Version manager
. $(brew --prefix asdf)/asdf.sh
. $(brew --prefix asdf)/etc/bash_completion.d/asdf.bash

# RVM - Ruby Version Manager
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*
